$cWhite: white;
$cBlack: black;

#container {
  text-align: center;
}
.try {
  .btn {
    position: relative;
    display: inline-block;
    transform-style: preserve-3d;
    perspective: 300px;
    // 3Dアニメーションを作成する場合は上記２つの記述を親要素に書く
    width: 150px;
    height: 50px;
    margin: 0 auto;
    cursor: pointer;

    &.cubic {
      & span {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 1px solid $cBlack;
        line-height: 48px;
        text-align: center;
        transition: all 0.3s;
      }

      & .hovering {
        background-color: $cBlack;
        color: $cWhite;
        transform: rotateX(90deg);
        // X軸を元に90度回った状態(上辺に隠れる)
        transform-origin: center center -25px;
        // 要素の原点をZ軸に-25度とすることで奥になる
      }

      & .default {
        background-color: $cWhite;
        color: $cBlack;
        transform: rotateX(0);
        // 正面に出したいので0度としている
        transform-origin: center center -25px;
      }

      &:hover {
        & .hovering {
          transform: rotateX(0);
        }
        & .default {
          transform: rotateX(-90deg);
          // アニメーション後下辺に隠れて欲しいのでこちらはマイナス
        }
      }
    }
  }
}
